{"version":3,"sources":["componentes/counter/CounterContainer.js","componentes/counter/index.js","componentes/header/HeaderApp.js","componentes/header/index.js","componentes/stickersAvailable/StickersAvailableApp.js","componentes/stickersAvailable/index.js","componentes/form/Form.js","componentes/form/index.js","App.js","serviceWorker.js","index.js"],"names":["CounterContainer","_ref","counter","increment","decrement","react_default","a","createElement","className","xmlns","width","height","onClick","d","type","readOnly","value","Counter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","props","dispatch","counter_CounterContainer","PureComponent","connect","HeaderApp","Header","header_HeaderApp","StickersAvailable","checkedReact","checkedVue","checkedAngular","handleClick","id","alt","Stickers","e","target","setState","StickersAvailableApp","FormApp","handleChange","sucess","name","placeholder","onChange","Form","preventDefault","setTimeout","form_Form","App","header","stickersAvailable","componentes_counter","componentes_form","Boolean","window","location","hostname","match","storeCounter","createStore","arguments","length","undefined","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad9a51cd.chunk.js","sourcesContent":["import React from 'react'\n\nconst CounterContainer = ({ counter, increment, decrement }) => (\n    <div className=\"fieldset\">\n        <div className=\"space-md\" />\n        <label>\n            <strong>Quantos stickers de cada?</strong>\n        </label>\n        <div className=\"space\" />\n        <div className=\"counter\">\n            <svg className={counter === 0 ? \"counterSvgZero\" : \"counterSvg\"} xmlns=\"http://www.w3.org/2000/svg\" width=\"42\" height=\"42\" onClick={decrement}>\n                <path d=\"M4.667 0A4.668 4.668 0 0 0 0 4.667v32.666A4.668 4.668 0 0 0 4.667 42h32.666A4.668 4.668 0 0 0 42 37.333V4.667A4.668 4.668 0 0 0 37.333 0H4.667zm28 23.333H9.333v-4.666h23.334v4.666z\" /></svg>\n            <input type=\"text\" readOnly value={counter} />\n            <svg className=\"counterSvg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"42\" height=\"42\" onClick={increment}>\n                <path d=\"M4.667 42h32.666A4.668 4.668 0 0 0 42 37.333V4.667A4.668 4.668 0 0 0 37.333 0H4.667A4.668 4.668 0 0 0 0 4.667v32.666A4.668 4.668 0 0 0 4.667 42zm4.666-23.333h9.334V9.333h4.666v9.334h9.334v4.666h-9.334v9.334h-4.666v-9.334H9.333v-4.666z\" /></svg>\n        </div>\n    </div>\n)\n\nexport default CounterContainer","import React, { PureComponent } from 'react'\nimport CounterContainer from './CounterContainer'\nimport { connect } from 'react-redux'\n\nclass Counter extends PureComponent {\n    constructor(){\n        super()\n        this.state = {\n            counter: 0\n        }\n        this.increment = () => {this.props.dispatch({type: 'INCREMENT'})}\n        this.decrement = () => {this.props.dispatch({type: 'DECREMENT'})}\n    }\n\n    render () {\n        return(\n          <CounterContainer \n          counter={this.props.counter}\n          increment={this.increment}\n          decrement={this.decrement}\n          />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state\n    }\n}\n\nexport default connect(mapStateToProps)(Counter)","import React from 'react'\n\nconst HeaderApp = () => (\n    <header className=\"header\">\n        <div className=\"title\">\n            <span>Formul√°rio</span>\n            <br />\n            <span>para compra de</span>\n            <h4>\n                <strong>Pacote de Stickers</strong>\n            </h4>\n        </div>\n    </header>\n)\n\nexport default HeaderApp","import React from 'react'\nimport HeaderApp from './HeaderApp'\n\nconst Header = () => (\n    <HeaderApp />\n)\n\nexport default Header","import React from 'react'\n\nconst StickersAvailable = ({ checkedReact, checkedVue, checkedAngular, handleClick }) => (\n  <div className=\"fieldset\">\n    <div className=\"space\" />\n    <label>\n      <strong>Quais stickers:</strong>\n    </label>\n    <div className=\"space\" />\n    <div className=\"stickers\">\n      <img className={checkedReact ? \"imgChecked\" : \"imgUnChecked\"} onClick={handleClick} id=\"react\" alt=\"\"></img> <label onClick={handleClick} id=\"react\">React</label>\n      <br />\n      <img className={checkedVue ? \"imgChecked\" : \"imgUnChecked\"} onClick={handleClick} id=\"vue\" alt=\"\"></img> <label onClick={handleClick} id=\"vue\">Vue</label>\n      <br />\n      <img className={checkedAngular ? \"imgChecked\" : \"imgUnChecked\"} onClick={handleClick} id=\"angular\" alt=\"\"></img> <label onClick={handleClick} id=\"angular\">Angular</label>\n    </div>\n  </div>\n)\n\nexport default StickersAvailable","import React, { PureComponent }from 'react'\nimport StickersAvailableApp from './StickersAvailableApp'\n\nclass Stickers extends PureComponent {\n    constructor(){\n        super()\n        this.state = {\n            checkedReact: false,\n            checkedVue: false,\n            checkedAngular: false\n        }\n\n        this.handleClick = (e) => {\n            e.target.id === \"react\" ? \n            this.setState({checkedReact: !this.state.checkedReact}) : \n            e.target.id === \"vue\" ? \n            this.setState({checkedVue: !this.state.checkedVue}) :\n            this.setState({checkedAngular: !this.state.checkedAngular})\n        }\n    }\n\n    render () {\n        return (\n            <StickersAvailableApp \n            checkedReact={this.state.checkedReact}\n            checkedVue={this.state.checkedVue}\n            checkedAngular={this.state.checkedAngular}\n            handleClick = {this.handleClick}\n            />\n        )\n    }\n}\n\nexport default Stickers","import React from 'react'\n\nconst FormApp = ({ handleChange, className, handleClick, sucess }) => (\n    <form >\n        <div className=\"fieldset\">\n            <div className=\"space-md\" />\n            <div className=\"textAreaForm\">\n                <label>\n                    <strong>Observa√ß√µes:</strong>\n                </label>\n                <div className=\"space\"/>\n                <textarea className=\"textArea\" name=\"descricao\" placeholder=\"Alguma d√∫vida? Recado?\" onChange={handleChange}></textarea>\n            </div>\n            <div className=\"space-md\"/>\n        </div>\n        <footer className=\"footer\">\n            <div className={sucess ? \"sucessText\" : \"error\"}>\n                <span>Formul√°rio enviado com sucesso!</span>\n            </div>\n            <div className=\"send\">\n                <button type=\"submit\" className={className} onClick={handleClick}>Enviar</button>\n            </div>\n        </footer>\n    </form>\n)\n\nexport default FormApp","import React, { PureComponent } from 'react'\nimport FormApp from './Form'\n\nclass Form extends PureComponent {\n    constructor() {\n        super()\n        this.state = {\n            value: '',\n            className: 'disableSend',\n            sucess: false\n        }\n\n        this.handleChange = (e) => {\n            this.setState({value: e.target.value})\n            e.target.value !== \"\" ? this.setState({ className: \"enableSend\" }) :\n                this.setState({ className: \"disableSend\" })\n        }\n\n        this.handleClick = (e) => {\n            e.preventDefault()\n            if (this.state.value !== \"\"){\n                this.setState({sucess : true})\n                setTimeout(() => {\n                    this.setState({sucess : false})\n                  }, 2000);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <FormApp\n                value={this.state.value}\n                handleChange={this.handleChange}\n                className={this.state.className}\n                handleClick={this.handleClick}\n                sucess={this.state.sucess}\n            />\n        )\n    }\n}\n\n\nexport default Form","import React from 'react';\nimport './App.css';\nimport Counter from './componentes/counter'\nimport Header from './componentes/header'\nimport StickersAvailableApp from './componentes/stickersAvailable'\nimport Form from './componentes/form'\n\nconst App = () => (\n  <div className=\"box\">\n    <Header />\n    <StickersAvailableApp />\n    <Counter /> \n    <Form/>\n </div>  \n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nconst counter = (state = 0, action) => {\n    switch (action.type) {\n        case 'INCREMENT': return state + 1\n        case 'DECREMENT': return state === 0 ? state : state - 1\n        default: return state\n    }\n}\n\nconst storeCounter = createStore(counter)\n\nReactDOM.render(\n    <Provider store={ storeCounter }>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}